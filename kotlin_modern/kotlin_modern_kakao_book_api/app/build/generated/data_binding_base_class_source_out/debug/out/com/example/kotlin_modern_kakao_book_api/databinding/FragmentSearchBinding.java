// Generated by view binder compiler. Do not edit!
package com.example.kotlin_modern_kakao_book_api.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.kotlin_modern_kakao_book_api.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnRetry;

  @NonNull
  public final TextInputEditText etSearch;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView rvSearchResult;

  @NonNull
  public final TextInputLayout tlSearch;

  @NonNull
  public final TextView tvEmptylist;

  private FragmentSearchBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnRetry,
      @NonNull TextInputEditText etSearch, @NonNull ProgressBar progressBar,
      @NonNull RecyclerView rvSearchResult, @NonNull TextInputLayout tlSearch,
      @NonNull TextView tvEmptylist) {
    this.rootView = rootView;
    this.btnRetry = btnRetry;
    this.etSearch = etSearch;
    this.progressBar = progressBar;
    this.rvSearchResult = rvSearchResult;
    this.tlSearch = tlSearch;
    this.tvEmptylist = tvEmptylist;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_retry;
      Button btnRetry = ViewBindings.findChildViewById(rootView, id);
      if (btnRetry == null) {
        break missingId;
      }

      id = R.id.et_search;
      TextInputEditText etSearch = ViewBindings.findChildViewById(rootView, id);
      if (etSearch == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.rv_search_result;
      RecyclerView rvSearchResult = ViewBindings.findChildViewById(rootView, id);
      if (rvSearchResult == null) {
        break missingId;
      }

      id = R.id.tl_search;
      TextInputLayout tlSearch = ViewBindings.findChildViewById(rootView, id);
      if (tlSearch == null) {
        break missingId;
      }

      id = R.id.tv_emptylist;
      TextView tvEmptylist = ViewBindings.findChildViewById(rootView, id);
      if (tvEmptylist == null) {
        break missingId;
      }

      return new FragmentSearchBinding((ConstraintLayout) rootView, btnRetry, etSearch, progressBar,
          rvSearchResult, tlSearch, tvEmptylist);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
